/*
** This function will be called when we write the Device file
*/
static ssize_t etx_write(struct file *filp, 
                const char __user *buf, size_t len, loff_t *off)
{
    pr_info("Write Function\n");
    char *kernel_buffer = kmalloc(len + 1, GFP_KERNEL); // Allocate memory for the buffer

    if (!kernel_buffer) {
        pr_err("Failed to allocate memory\n");
        return -ENOMEM;
    }

    // Copy data from user space
    if (copy_from_user(kernel_buffer, buf, len)) {
        pr_err("Failed to receive data from user space\n");
        kfree(kernel_buffer);
        return -EFAULT;
    }
echo "Hello, this is a test" > /dev/etx_device

    // Null terminate the string
    kernel_buffer[len] = '\0';

    pr_info("Received data from user space: %s\n", kernel_buffer);
    kfree(kernel_buffer);

    return len;
}